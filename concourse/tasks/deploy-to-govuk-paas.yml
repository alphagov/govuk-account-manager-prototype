platform: linux
image_resource:
  type: docker-image
  source:
    repository: governmentpaas/cf-cli
    tag: e1ffec0d1940706f157a8c1e0ab8131b7084fa1c
inputs:
  - name: git-main
    path: src
params:
  CF_API: https://api.london.cloud.service.gov.uk
  CF_APP_NAME: govuk-account-manager
  CF_ORG: govuk-accounts
  CF_PASSWORD: ((paas-password))
  CF_STARTUP_TIMEOUT: 15 # minutes
  CF_USERNAME: ((paas-username))
  EMAIL_ALERT_API_BEARER_TOKEN: ((email-alert-api-bearer-token))
  ENABLE_REGISTRATION: "true"
  FEATURE_FLAG_MFA: enabled
  NOTIFY_SMS_TEMPLATE_ID: 51f0410b-0367-4e24-bf4d-17019791b77d
  NOTIFY_TEMPLATE_ID: 6074fdc2-03b3-4bb6-83fe-31220779c13b
  SENTRY_DSN: https://((sentry-dsn))
  ZENDESK_CLIENT_TOKEN: ((zendesk-api-key))
  ZENDESK_CLIENT_USERNAME: ((zendesk-api-username))
  ZENDESK_GROUP_ID: 20826398

run:
  dir: src
  path: sh
  args:
    - "-c"
    - |
      set -eu

      cf api "$CF_API"
      cf auth
      cf t -o "$CF_ORG" -s "$CF_SPACE"
      cf create-app $CF_APP_NAME || true
      cf apply-manifest -f manifest.yml
      cf set-env $CF_APP_NAME CF_STARTUP_TIMEOUT "$CF_STARTUP_TIMEOUT"

      yes | cf install-plugin -r CF-Community app-autoscaler-plugin
      cf attach-autoscaling-policy $CF_APP_NAME $CF_APP_SCALING_POLICY

      if [[ "${REQUIRE_BASIC_AUTH:-}" = "true" ]]; then
        cf set-env $CF_APP_NAME REQUIRE_BASIC_AUTH "$REQUIRE_BASIC_AUTH"
        cf set-env $CF_APP_NAME BASIC_AUTH_USERNAME "$BASIC_AUTH_USERNAME"
        cf set-env $CF_APP_NAME BASIC_AUTH_PASSWORD "$BASIC_AUTH_PASSWORD"
      else
        cf unset-env $CF_APP_NAME REQUIRE_BASIC_AUTH
        cf unset-env $CF_APP_NAME BASIC_AUTH_USERNAME
        cf unset-env $CF_APP_NAME BASIC_AUTH_PASSWORD
      fi

      if [[ -n "${BIGQUERY_CREDENTIALS:-}" ]]; then
        cf set-env $CF_APP_NAME BIGQUERY_CREDENTIALS "$BIGQUERY_CREDENTIALS"
      fi

      cf set-env $CF_APP_NAME ENABLE_REGISTRATION "$ENABLE_REGISTRATION"
      cf set-env $CF_APP_NAME GOVUK_APP_DOMAIN "$APP_DOMAIN"
      cf set-env $CF_APP_NAME GOVUK_WEBSITE_ROOT "$WEBSITE_ROOT"
      cf set-env $CF_APP_NAME NOTIFY_API_KEY "$NOTIFY_API_KEY"
      cf set-env $CF_APP_NAME GOVUK_NOTIFY_TEMPLATE_ID "$NOTIFY_TEMPLATE_ID"
      cf set-env $CF_APP_NAME GOVUK_NOTIFY_SMS_TEMPLATE_ID "$NOTIFY_SMS_TEMPLATE_ID"
      cf set-env $CF_APP_NAME FEATURE_FLAG_MFA "$FEATURE_FLAG_MFA"
      cf set-env $CF_APP_NAME REDIRECT_BASE_URL "https://www.${CDN_DOMAIN}"

      cf set-env $CF_APP_NAME EMAIL_ALERT_API_BEARER_TOKEN "$EMAIL_ALERT_API_BEARER_TOKEN"
      cf set-env $CF_APP_NAME PLEK_SERVICE_EMAIL_ALERT_API_URI "$PLEK_SERVICE_EMAIL_ALERT_API_URI"

      cf set-env $CF_APP_NAME SENTRY_DSN "$SENTRY_DSN"
      cf set-env $CF_APP_NAME SENTRY_CURRENT_ENV "$CF_SPACE"

      cf set-env $CF_APP_NAME OIDC_IDP_ISSUER "https://www.${CDN_DOMAIN}"
      cf set-env $CF_APP_NAME OIDC_IDP_PRIVATE_KEY "$OIDC_SIGNING_KEY"
      cf set-env $CF_APP_NAME OIDC_IDP_PEPPER "$OIDC_PEPPER"
      cf set-env $CF_APP_NAME SECRET_KEY_BASE "$SECRET_KEY_BASE"
      cf set-env $CF_APP_NAME PASSWORD_PEPPER "$PASSWORD_PEPPER"

      cf set-env $CF_APP_NAME ATTRIBUTE_SERVICE_URL "https://attributes.${CDN_DOMAIN}"

      cf set-env $CF_APP_NAME ZENDESK_CLIENT_USERNAME "$ZENDESK_CLIENT_USERNAME"
      cf set-env $CF_APP_NAME ZENDESK_CLIENT_TOKEN "$ZENDESK_CLIENT_TOKEN"
      cf set-env $CF_APP_NAME ZENDESK_GROUP_ID "$ZENDESK_GROUP_ID"

      cf push $CF_APP_NAME --strategy rolling
      cf map-route $CF_APP_NAME "$CDN_DOMAIN" --hostname www

      cf scale --process worker -i "$WORKER_INSTANCES" $CF_APP_NAME
